import { supabase } from './supabase.js';

// ‚úÖ –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
function getCurrentUser() {
  const user = window.Telegram?.WebApp?.initDataUnsafe?.user;
  return {
    tg_id: user?.id?.toString() || 'guest-' + Date.now(),
    username: user?.username || 'Anonymous',
  };
}

// ‚úÖ –ó—á–∏—Ç—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä–∞–≤—Ü—è
export async function getWhiskas() {
  const { tg_id, username } = getCurrentUser();

  // üü¢ –ó–∞–≤–∂–¥–∏ –æ–Ω–æ–≤–ª—é—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  await supabase.from('players').upsert(
    { tg_id, username },
    { onConflict: ['tg_id'] }
  );

  const { data, error } = await supabase
    .from('players')
    .select('whiskas')
    .eq('tg_id', tg_id)
    .single();

  if (error) {
    console.warn('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ getWhiskas():', error);
    return 0;
  }

  return data?.whiskas ?? 0;
}

// ‚úÖ –î–æ–¥–∞—î–º–æ whiskas –ø—ñ—Å–ª—è –≥—Ä–∏
export async function updateWhiskas(addAmount) {
  const { tg_id } = getCurrentUser();
  const current = await getWhiskas(); // –≤–∏–∫–ª–∏–∫–∞—î –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ getCurrentUser
  const newTotal = current + addAmount;

  await supabase
    .from('players')
    .update({ whiskas: newTotal })
    .eq('tg_id', tg_id);

  console.log('üü¢ updateWhiskas()', tg_id, addAmount);
  return newTotal;
}